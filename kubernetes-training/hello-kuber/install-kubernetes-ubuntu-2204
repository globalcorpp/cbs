kubernetes 1.24

//sysprep
sudo cat /sys/class/dmi/id/product_uuid

//set hostname
hostnamectl set-hostname kuber-master

vim /etc/hosts
x.x.x.x kuber-master

lsmod | grep br_netfilter
modprobe  br_netfilter

cat <<EOF | sudo tee /etc/modules-load.d/k8s.conf
br_netfilter
EOF

cat <<EOF | sudo tee /etc/sysctl.d/k8s.conf
net.bridge.bridge-nf-call-ip6tables = 1
net.bridge.bridge-nf-call-iptables = 1
net.ipv4.ip_forward = 1
EOF

sudo sysctl --system

swapon --show
swapoff -a
sudo sed -i '/ swap / s/^/#/' /etc/fstab
sudo sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
vim /etc/fstab
rm /swap.img

apt update
apt install containerd

wget https://github.com/containerd/nerdctl/releases/download/v0.22.2/nerdctl-0.22.2-linux-amd64.tar.gz
tar Cxzvf /usr/local/bin nerdctl-0.22.2-linux-amd64.tar.gz

apt install apt-transport-https ca-certificates curl

curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | sudo tee /etc/apt/sources.list.d/kubernetes.list


apt update

apt install kubelet kubeadm kubectl

//sudo apt-mark hold kubelet kubeadm kubectl

mkdir -p /etc/containerd
containerd config default > /etc/containerd/config.toml
vim /etc/containerd/config.toml

[plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc]
  ...
  [plugins."io.containerd.grpc.v1.cri".containerd.runtimes.runc.options]
    SystemdCgroup = true

kubeadm init --pod-network-cidr=10.244.0.0/16

Your Kubernetes control-plane has initialized successfully!

To start using your cluster, you need to run the following as a regular user:

  mkdir -p $HOME/.kube
  sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
  sudo chown $(id -u):$(id -g) $HOME/.kube/config

Alternatively, if you are the root user, you can run:

  export KUBECONFIG=/etc/kubernetes/admin.conf

kubeadm join 192.168.22.230:6443 --token rmt7xz.dnvffaba1fuewdht \
	--discovery-token-ca-cert-hash sha256:a9bad70e86ab6a998259d775c55dc4ee24666cca9b4d308422f26c90148ad04d 


kubectl get pods -A

kubectl apply -f "https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d '\n')"


kubectl label node kube-worker02 node-role.kubernetes.io/worker=worker

//auto compete
apt install bash-completion
echo 'source <(kubectl completion bash)' >>~/.bashrc
echo 'alias k=kubectl' >>~/.bashrc
echo 'complete -o default -F __start_kubectl k' >>~/.bashrc


kubectl apply -f https://k8s.io/examples/controllers/nginx-deployment.yaml
//kubectl run --image=nginx nginx-server --port=80 --env="DOMAIN=cluster"
kubectl expose deployment nginx-deployment --port=80 --name=nginx-http
kubectl create service nodeport nginx-deployment --tcp=80:80
kubectl get svc

k create deployment nginx --image=nginx
kubectl expose deployment nginx --port=80 --name=YourName
k create service nodeport nginx --tcp=80:80